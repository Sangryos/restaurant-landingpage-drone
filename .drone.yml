env: &env
  BASE_URL: http://restaurant-drone-bucket.s3-website-us-east-1.amazonaws.com
  AWS_SESSION_TOKEN:
    from_secret: aws_session_token
  AWS_ACCESS_KEY_ID:
    from_secret: aws_access_key_id
  AWS_SECRET_ACCESS_KEY:
    from_secret: aws_secret_access_key

kind: pipeline
name: hugo-website
steps:
  - name: hugo-build
    image: peaceiris/hugo:v0.65.3-mod
    environment:
      <<: *env
    commands:
      - hugo --baseURL $BASE_URL
      - ls public
    trigger:
      event:
        - tag
        - push

  - name: archive-create
    image: alpine/git:latest
    environment:
      <<: *env
    commands:
      - tar -czf hugo-build-${CI_BUILD_NUMBER}.tar.gz public/
      - echo hugo-build-${CI_BUILD_NUMBER}.tar.gz
    when:
      event:
        - tag

  - name: archive-release
    image: amazon/aws-cli
    environment:
      <<: *env
    commands:
      - aws s3 cp "hugo-build-${CI_BUILD_NUMBER}.tar.gz" s3://restaurant-drone-releases-bucket/releases/
    when:
      event:
        - tag

  - name: publish-website-s3
    image: amazon/aws-cli
    environment:
      <<: *env
    commands:
      - export AWS_DEFAULT_REGION="us-east-1"
      - export SITE_BUCKET="restaurant-drone-bucket"
      - LATEST_RELEASE=$(aws s3 ls s3://restaurant-drone-releases-bucket/releases/ --recursive | sort | tail -n 1 | awk '{print $4}')
      - if [ -z "$LATEST_RELEASE" ]; then echo "❌ No release found in S3 archive bucket!"; exit 1; fi
      - aws s3 cp s3://restaurant-drone-releases-bucket/$LATEST_RELEASE ./release.tar.gz
      - apk update
      - apk add --no-cache tar
      - mkdir release_content
      - tar -xzf release.tar.gz -C release_content --strip-components=1
      - ls release_content/
      - aws s3 sync release_content/ s3://${SITE_BUCKET}/ --delete --exclude ".DS_Store"
    when:
      event: promote